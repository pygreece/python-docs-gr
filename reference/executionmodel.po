# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-03-14 12:51+0000\n"
"PO-Revision-Date: 2024-12-09 18:41+0200\n"
"Last-Translator: Marios Giannopoulos <mariosgian_2002@yahoo.gr>\n"
"Language-Team: PyGreece <pygreece@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: reference/executionmodel.rst:6
msgid "Execution model"
msgstr "Μοντέλο εκτέλεσης"

#: reference/executionmodel.rst:15
msgid "Structure of a program"
msgstr "Δομή ενός προγράμματος"

#: reference/executionmodel.rst:19
msgid ""
"A Python program is constructed from code blocks. A :dfn:`block` is a piece "
"of Python program text that is executed as a unit. The following are blocks: "
"a module, a function body, and a class definition. Each command typed "
"interactively is a block.  A script file (a file given as standard input to "
"the interpreter or specified as a command line argument to the interpreter) "
"is a code block.  A script command (a command specified on the interpreter "
"command line with the :option:`-c` option) is a code block. A module run as "
"a top level script (as module ``__main__``) from the command line using a :"
"option:`-m` argument is also a code block. The string argument passed to the "
"built-in functions :func:`eval` and :func:`exec` is a code block."
msgstr ""
"Ένα πρόγραμμα Python αποτελείται από μπλοκ κώδικα. Ένα :dfn:`μπλοκ` είναι "
"ένα κομμάτι κειμένου προγράμματος Python που εκτελείται ως μονάδα. Τα "
"παρακάτω είναι μπλοκ: ένα module, το σώμα μιας συνάρτησης, ο ένας ορισμός "
"κλάσης. Κάθε εντολή που πληκτρολογείται διαδραστικά αποτελεί μπλοκ. Ένα "
"αρχείο δέσμης ενεργειών (ένα αρχείο που δίνεται ως τυπική είσοδος στο "
"διερμηνέα ή καθορίζεται ως όρισμα γραμμής εντολών στον διερμηνέα) είναι ένα "
"μπλοκ κώδικα. Μια εντολή σεναρίου (μια εντολή που καθορίζεται στο διερμηνέα "
"με την επιλογή :option:`-c`) είναι ένα μπλοκ κώδικα. Μια ενότητα που "
"εκτελείται ως σενάριο ανώτερου επιπέδου (ως ενότητα ``__main__``) από τη "
"γραμμή εντολών χρησιμοποιώντας ένα όρισμα :option:`-m` όρισμα είναι επίσης "
"ένα μπλοκ κώδικα. Το όρισμα συμβολοσειράς που περνάει στις ενσωματωμένες "
"συναρτήσεις :func:`eval` και :func:`exec` είναι ένα μπλοκ κώδικα."

#: reference/executionmodel.rst:33
msgid ""
"A code block is executed in an :dfn:`execution frame`.  A frame contains "
"some administrative information (used for debugging) and determines where "
"and how execution continues after the code block's execution has completed."
msgstr ""
"Ένα μπλοκ κώδικα εκτελείται σε ένα :dfn:`πλαίσιο εκτέλεσης`. Ένα πλαίσιο "
"περιέχει ορισμένες διοικητικές πληροφορίες (που χρησιμοποιούνται για "
"αποσφαλμάτωση) και καθορίζει που και πως συνεχίζεται η εκτέλεση μετά την "
"ολοκλήρωση της εκτέλεσης του μπλοκ κώδικα."

#: reference/executionmodel.rst:40
msgid "Naming and binding"
msgstr "Ονομασία και δέσμευση"

#: reference/executionmodel.rst:49
msgid "Binding of names"
msgstr "Δέσμευση ονομάτων"

#: reference/executionmodel.rst:55
msgid ""
":dfn:`Names` refer to objects.  Names are introduced by name binding "
"operations."
msgstr ""
":dfn:`Ονόματα` αναφέρονται σε αντικείμενα. Τα ονόματα εισάγονται μέσω "
"λειτουργιών δέσμευσης ονομάτων."

#: reference/executionmodel.rst:59
msgid "The following constructs bind names:"
msgstr "Οι παρακάτω δομές δεσμεύουν ονόματα:"

#: reference/executionmodel.rst:61
msgid "formal parameters to functions,"
msgstr "τυπικές παράμετροι συναρτήσεων,"

#: reference/executionmodel.rst:62
msgid "class definitions,"
msgstr "ορισμοί κλάσεων,"

#: reference/executionmodel.rst:63
msgid "function definitions,"
msgstr "ορισμοί συναρτήσεων"

#: reference/executionmodel.rst:64
msgid "assignment expressions,"
msgstr "εκφράσεις ανάθεσης"

#: reference/executionmodel.rst:65
msgid ""
":ref:`targets <assignment>` that are identifiers if occurring in an "
"assignment:"
msgstr ""
":ref:`στόχοι <assignment>` που είναι αναγνωριστικά αν εμφανίζονται σε μια "
"ανάθεση:"

#: reference/executionmodel.rst:68
msgid ":keyword:`for` loop header,"
msgstr "επικεφαλίδα βρόχου :keyword:`for`,"

#: reference/executionmodel.rst:69
msgid ""
"after :keyword:`!as` in a :keyword:`with` statement, :keyword:`except` "
"clause, :keyword:`except* <except_star>` clause, or in the as-pattern in "
"structural pattern matching,"
msgstr ""
"μετά το :keyword:`!as` σε μια δήλωση :keyword:`with`, σε ρήτρα "
":keyword:`except`, σε ρήτρα :keyword:`except* <except_star>` ή στο as-pattern κατά τη "
"δομική αντιστοίχηση μοτίβων,"

#: reference/executionmodel.rst:71
msgid "in a capture pattern in structural pattern matching"
msgstr "σε ένα capture pattern κατά τη δομική αντιστοίχηση μοτίβων"

#: reference/executionmodel.rst:73
msgid ":keyword:`import` statements."
msgstr "δηλώσεις :keyword:`import`."

#: reference/executionmodel.rst:74
msgid ":keyword:`type` statements."
msgstr "δηλώσεις :keyword:`type`."

#: reference/executionmodel.rst:75
msgid ":ref:`type parameter lists <type-params>`."
msgstr ":ref:`λίστες παραμέτρων τύπου <type-params>`."

#: reference/executionmodel.rst:77
msgid ""
"The :keyword:`!import` statement of the form ``from ... import *`` binds all "
"names defined in the imported module, except those beginning with an "
"underscore. This form may only be used at the module level."
msgstr ""
"Η δήλωση :keyword:`!import` της μορφής ``from ... import *`` δεσμεύει όλα τα "
"ονόματα που ορίζονται στο εισαγόμενο module, εκτός από αυτά που ξεκινούν με "
"μια κάτω παύλα. Αυτή η μορφή μπορεί να χρησιμοποιηθεί μόνο στο επίπεδο του "
"module."

#: reference/executionmodel.rst:81
msgid ""
"A target occurring in a :keyword:`del` statement is also considered bound "
"for this purpose (though the actual semantics are to unbind the name)."
msgstr ""
"Ένας στόχος που εμφανίζεται σε μια δήλωση :keyword:`del` θεωρείται επίσης "
"δεσμευμένος για αυτό τον σκοπό (αν και η πραγματική σημασιολογία είναι να "
"αποδεσμεύσει το όνομα)."

#: reference/executionmodel.rst:84
msgid ""
"Each assignment or import statement occurs within a block defined by a class "
"or function definition or at the module level (the top-level code block)."
msgstr ""
"Κάθε δήλωση ανάθεσης ή εισαγωγής συμβαίνει μέσα σε ένα μπλοκ που ορίζεται "
"από έναν ορισμό κλάσης ή συνάρτησης ή στο επίπεδο του module (το μπλοκ "
"κώδικα ανώτατου επιπέδου)."

#: reference/executionmodel.rst:89
msgid ""
"If a name is bound in a block, it is a local variable of that block, unless "
"declared as :keyword:`nonlocal` or :keyword:`global`.  If a name is bound at "
"the module level, it is a global variable.  (The variables of the module "
"code block are local and global.)  If a variable is used in a code block but "
"not defined there, it is a :dfn:`free variable`."
msgstr ""
"Αν ένα όνομα δεσμεύεται σε ένα μπλοκ, είναι μια τοπική μεταβλητή αυτού του "
"μπλοκ, εκτός αν δηλωθεί ως :keyword:`nonlocal` ή :keyword:`global`. Αν ένα "
"όνομα δεσμεύεται στο επίπεδο του module, είναι μια καθολική μεταβλητή. (Οι "
"μεταβλητές του μπλοκ του module είναι ταυτόχρονα τοπικές και καθολικές.) Αν "
"μια μεταβλητή χρησιμοποιείται σε ένα μπλοκ κώδικα αλλά δεν ορίζεται εκεί, "
"είναι μια :dfn:`ελεύθερη μεταβλητή`."

#: reference/executionmodel.rst:95
msgid ""
"Each occurrence of a name in the program text refers to the :dfn:`binding` "
"of that name established by the following name resolution rules."
msgstr ""
"Κάθε εμφάνιση ενός ονόματος στο κείμενο του προγράμματος αναφέρεται στη :dfn:"
"`δέσμευση` αυτού του ονόματος που καθορίζεται από τους παρακάτω κανόνες "
"επίλυσης ονομάτων."

#: reference/executionmodel.rst:101
msgid "Resolution of names"
msgstr "Επίλυση ονομάτων"

#: reference/executionmodel.rst:105
msgid ""
"A :dfn:`scope` defines the visibility of a name within a block.  If a local "
"variable is defined in a block, its scope includes that block.  If the "
"definition occurs in a function block, the scope extends to any blocks "
"contained within the defining one, unless a contained block introduces a "
"different binding for the name."
msgstr ""
"Ένα :dfn:`πεδίο` ορίζει την ορατότητα ενός ονόματος μέσα σε ένα μπλοκ. Αν "
"μια τοπική μεταβλητή οριστεί σε ένα μπλοκ, το πεδίο της περιλαμβάνει το "
"μπλοκ αυτό. Αν ο ορισμός συμβαίνει σε ένα μπλοκ συνάρτησης, το πεδίο "
"επεκτείνεται σε οποιαδήποτε μπλοκ περιέχονται μέσα σε αυτό που την ορίζει, "
"εκτός αν ένα περιεχόμενο μπλοκ εισάγει διαφορετική δέσμευση για το όνομα."

#: reference/executionmodel.rst:113
msgid ""
"When a name is used in a code block, it is resolved using the nearest "
"enclosing scope.  The set of all such scopes visible to a code block is "
"called the block's :dfn:`environment`."
msgstr ""
"Όταν ένα όνομα χρησιμοποιείται σε ένα μπλοκ κώδικα, επιλύεται "
"χρησιμοποιώντας το πλησιέστερο περιβάλλον πεδίο. Το σύνολο όλων των πεδίων "
"που είναι ορατά σε ένα μπλοκ κώδικα ονομάζεται :dfn:`περιβάλλον` του μπλοκ."

#: reference/executionmodel.rst:121
msgid ""
"When a name is not found at all, a :exc:`NameError` exception is raised. If "
"the current scope is a function scope, and the name refers to a local "
"variable that has not yet been bound to a value at the point where the name "
"is used, an :exc:`UnboundLocalError` exception is raised. :exc:"
"`UnboundLocalError` is a subclass of :exc:`NameError`."
msgstr ""
"Όταν ένα όνομα δεν βρίσκεται καθόλου, εγείρεται μια εξαίρεση :exc:"
"`NameError`. Αν το τρέχον πεδίο είναι πεδίο συνάρτησης και το όνομα "
"αναφέρεται σε μια τοπική μεταβλητή που δεν έχει ακόμα δεσμευτεί σε κάποια "
"τιμή στο σημείο που χρησιμοποιείται το όνομα, εγείρεται μια εξαίρεση :exc:"
"`UnboundLocalError`. Η :exc:`UnboundLocalError` είναι μια υποκλάση της :exc:"
"`NameError`."

#: reference/executionmodel.rst:127
msgid ""
"If a name binding operation occurs anywhere within a code block, all uses of "
"the name within the block are treated as references to the current block.  "
"This can lead to errors when a name is used within a block before it is "
"bound.  This rule is subtle.  Python lacks declarations and allows name "
"binding operations to occur anywhere within a code block.  The local "
"variables of a code block can be determined by scanning the entire text of "
"the block for name binding operations. See :ref:`the FAQ entry on "
"UnboundLocalError <faq-unboundlocalerror>` for examples."
msgstr ""
"Αν μια λειτουργία δέσμευσης ονομάτων συμβεί οπουδήποτε μέσα σε ένα μπλοκ "
"κώδικα, όλες οι χρήσεις του ονόματος μέσα στο μπλοκ αντιμετωπίζονται ως "
"αναφορές στο τρέχον μπλοκ. Αυτό μπορεί να οδηγήσει σε σφάλματα όταν ένα "
"όνομα χρησιμοποιείται μέσα σε ένα μπλοκ πριν δεσμευτεί. Αυτός ο κανόνας "
"είναι λεπτός. Η Python δεν διαθέτει δηλώσεις και επιτρέπει τις λειτουργίες "
"δέσμευσης ονομάτων να συμβαίνουν οπουδήποτε μέσα σε ένα μπλοκ κώδικα. Οι "
"τοπικές μεταβλητές ενός μπλοκ κώδικα μπορούν να προσδιοριστούν σαρώνοντας "
"ολόκληρο το κείμενο του μπλοκ για λειτουργίες δέσμευσης ονομάτων. Δείτε :ref:"
"`την εγγραφή στο FAQ για το UnboundLocalError <faq-unboundlocalerror>` για "
"παραδείγματα."

#: reference/executionmodel.rst:136
msgid ""
"If the :keyword:`global` statement occurs within a block, all uses of the "
"names specified in the statement refer to the bindings of those names in the "
"top-level namespace.  Names are resolved in the top-level namespace by "
"searching the global namespace, i.e. the namespace of the module containing "
"the code block, and the builtins namespace, the namespace of the module :mod:"
"`builtins`.  The global namespace is searched first.  If the names are not "
"found there, the builtins namespace is searched.  The :keyword:`!global` "
"statement must precede all uses of the listed names."
msgstr ""
"Αν η δήλωση :keyword:`global` εμφανιστεί μέσα σε ένα μπλοκ, όλες οι χρήσεις "
"των ονομάτων που καθορίζονται στη δήλωση αναφέρονται στις δεσμεύσεις αυτών "
"των ονομάτων στον χώρο ονομάτων ανώτατου επιπέδου. Τα ονόματα επιλύονται "
"στον χώρο ανώτατου επιπέδου αναζητώντας πρώτα στον καθολικό χώρο ονομάτων, "
"δηλαδή τον χώρο ονομάτων του module που περιέχει το μπλοκ κώδικα, και στη "
"συνέχεια στο χώρο ονομάτων των builtins, τον χώρο ονομάτων του module :mod: "
"`builtins`. Ο καθολικός χώρος ονομάτων αναζητείται πρώτος. Αν τα ονόματα δεν "
"βρεθούν εκεί, αναζητούνται στον χώρο ονομάτων των builtins. Η δήλωση :"
"keyword:`!global` πρέπει να προηγείται όλων των χρήσεων των καταγεγραμμένων "
"ονομάτων."

#: reference/executionmodel.rst:145
msgid ""
"The :keyword:`global` statement has the same scope as a name binding "
"operation in the same block.  If the nearest enclosing scope for a free "
"variable contains a global statement, the free variable is treated as a "
"global."
msgstr ""
"Η δήλωση :keyword:`global` έχει το ίδιο πεδίο με μια λειτουργία δέσμευσης "
"ονόματος στο ίδιο μπλοκ. Αν το πλησιέστερο περιβάλλον πεδίου για μια "
"ελεύθερη μεταβλητή περιέχει μια δήλωση global, η ελεύθερη μεταβλητή "
"αντιμετωπίζεται ως καθολική."

#: reference/executionmodel.rst:151
msgid ""
"The :keyword:`nonlocal` statement causes corresponding names to refer to "
"previously bound variables in the nearest enclosing function scope. :exc:"
"`SyntaxError` is raised at compile time if the given name does not exist in "
"any enclosing function scope. :ref:`Type parameters <type-params>` cannot be "
"rebound with the :keyword:`!nonlocal` statement."
msgstr ""
"Η δήλωση :keyword:`nonlocal` προκαλεί τα αντίστοιχα ονόματα να αναφέρονται "
"σε προηγουμένως δεσμευμένες μεταβλητές στο πλησιέστερο περιβάλλον πεδίου "
"συνάρτησης. Μια εξαίρεση :exc:`SyntaxError` εγείρεται κατά το χρόνο "
"μεταγλώττισης αν το συγκεκριμένο δεν υπάρχει σε κανένα περιβάλλον πεδίου "
"συνάρτησης. :ref:`Οι παράμετροι τύπου <type-params>` δεν μπορούν να "
"δεσμευτούν εκ νέου με τη δήλωση :keyword:`!nonlocal`."

#: reference/executionmodel.rst:159
msgid ""
"The namespace for a module is automatically created the first time a module "
"is imported.  The main module for a script is always called :mod:`__main__`."
msgstr ""
"Ο χώρος ονομάτων για ένα module δημιουργείται αυτόματα την πρώτη φορά που το "
"module εισάγεται Το κύριο module για ένα σενάριο ονομάζεται πάντα :mod:"
"`__main__`."

#: reference/executionmodel.rst:162
msgid ""
"Class definition blocks and arguments to :func:`exec` and :func:`eval` are "
"special in the context of name resolution. A class definition is an "
"executable statement that may use and define names. These references follow "
"the normal rules for name resolution with an exception that unbound local "
"variables are looked up in the global namespace. The namespace of the class "
"definition becomes the attribute dictionary of the class. The scope of names "
"defined in a class block is limited to the class block; it does not extend "
"to the code blocks of methods. This includes comprehensions and generator "
"expressions, but it does not include :ref:`annotation scopes <annotation-"
"scopes>`, which have access to their enclosing class scopes. This means that "
"the following will fail::"
msgstr ""
"Τα μπλοκ ορισμού κλάσεων και τα ορίσματα στις συναρτήσεις :func:`exec` και :"
"func:`eval` είναι ειδικές περιπτώσεις στο πλαίσιο της επίλυσης ονομάτων. "
"Ένας ορισμός κλάσης είναι μια εκτελέσιμη δήλωση που μπορεί να χρησιμοποιεί "
"και να ορίζει ονόματα. Αυτές οι αναφορές ακολουθούν τους κανονικούς κανόνες "
"επίλυσης ονομάτων, με την εξαίρεση ότι οι αδέσμευτες τοπικές μεταβλητές "
"αναζητούνται στον καθολικό χώρο ονομάτων. Ο χώρος ονομάτων του ορισμού της "
"κλάσης γίνεται το λεξικό χαρακτηριστικών της κλάσης. Το πεδίο των ονομάτων "
"που ορίζονται σε ένα μπλοκ κλάσης περιορίζεται στο μπλοκ της κλάσης· δεν "
"επεκτείνεται στα μπλοκ κώδικα των μεθόδων. Αυτό περιλαμβάνει συνθέσεις και "
"εκφράσεις γεννητριών, αλλά δεν περιλαμβάνει:ref:`πεδία σημειώσεων "
"<annotation-scopes>`, τα οποία έχουν πρόσβαση στα περιβάλλοντα πεδία της "
"περιβάλλουσας κλάσης. Αυτό σημαίνει ότι το παρακάτω θα αποτύχει::"

#: reference/executionmodel.rst:179
msgid "However, the following will succeed::"
msgstr "Ωστόσο, το παρακάτω θα επιτύχει::"

#: reference/executionmodel.rst:190
msgid "Annotation scopes"
msgstr "Πεδία σημειώσεων"

#: reference/executionmodel.rst:192
msgid ""
":ref:`Type parameter lists <type-params>` and :keyword:`type` statements "
"introduce *annotation scopes*, which behave mostly like function scopes, but "
"with some exceptions discussed below. :term:`Annotations <annotation>` "
"currently do not use annotation scopes, but they are expected to use "
"annotation scopes in Python 3.13 when :pep:`649` is implemented."
msgstr ""
":ref:`Οι λίστες παραμέτρων τύπου <type-params>` και οι δηλώσεις :keyword:"
"`type` εισάγουν *πεδία σημειώσεων*, τα οποία συμπεριφέρονται κυρίως όπως τα "
"πεδία συναρτήσεων,αλλά με κάποιες εξαιρέσεις που συζητούνται παρακάτω. :term:"
"`Οι σημειώσεις <annotation>`προς το παρόν δεν χρησιμοποιούν πεδία "
"σημειώσεων, αλλά αναμένεται να τα χρησιμοποιήσουν στην Python 3.13, όταν "
"υλοποιηθεί το :pep:`649`."

#: reference/executionmodel.rst:198
msgid "Annotation scopes are used in the following contexts:"
msgstr "Τα πεδία σημειώσεων χρησιμοποιούνται στα παρακάτω συμφραζόμενα:"

#: reference/executionmodel.rst:200
msgid ""
"Type parameter lists for :ref:`generic type aliases <generic-type-aliases>`."
msgstr ""
"Λίστες παραμέτρων τύπου για :ref:`γενικούς τύπους ψευδωνύμων <generic-type-"
"aliases>`."

#: reference/executionmodel.rst:201
msgid ""
"Type parameter lists for :ref:`generic functions <generic-functions>`. A "
"generic function's annotations are executed within the annotation scope, but "
"its defaults and decorators are not."
msgstr ""
"Λίστες παραμέτρων τύπου για :ref:`γενικές συναρτήσεις <generic-functions>`. "
"Οι σημειώσεις μιας γενικής συνάρτησης εκτελούνται μέσα στο πεδίο σημειώσεων, "
"αλλά οι προεπιλογές και οι διακοσμητές της όχι."

#: reference/executionmodel.rst:204
msgid ""
"Type parameter lists for :ref:`generic classes <generic-classes>`. A generic "
"class's base classes and keyword arguments are executed within the "
"annotation scope, but its decorators are not."
msgstr ""
"Λίστες παραμέτρων τύπου για :ref:`γενικές κλάσεις <generic-classes>`. Οι "
"βασικές κλάσεις και τα ορίσματα λέξεων-κλειδιών μιας γενικής κλάσης "
"εκτελούνται μέσα στο πεδίο σημειώσεων, αλλά οι διακοσμητές της όχι."

#: reference/executionmodel.rst:207
msgid ""
"The bounds and constraints for type variables (:ref:`lazily evaluated <lazy-"
"evaluation>`)."
msgstr ""
"Τα όρια και οι περιορισμοί για μεταβλητές τύπου (:ref:`εκτιμώμενα "
"καθυστερημένα <lazy-evaluation>`)."

#: reference/executionmodel.rst:209
msgid "The value of type aliases (:ref:`lazily evaluated <lazy-evaluation>`)."
msgstr ""
"Η τιμή των ψευδωνύμων τύπου (:ref:`εκτιμώμενη καθυστερημένα <lazy-"
"evaluation>`)."

#: reference/executionmodel.rst:211
msgid "Annotation scopes differ from function scopes in the following ways:"
msgstr ""
"Τα πεδία σημειώσεων διαφέρουν από τα πεδία συναρτήσεων με τους εξής τρόπους:"

#: reference/executionmodel.rst:213
msgid ""
"Annotation scopes have access to their enclosing class namespace. If an "
"annotation scope is immediately within a class scope, or within another "
"annotation scope that is immediately within a class scope, the code in the "
"annotation scope can use names defined in the class scope as if it were "
"executed directly within the class body. This contrasts with regular "
"functions defined within classes, which cannot access names defined in the "
"class scope."
msgstr ""
"Τα πεδία σημειώσεων έχουν πρόσβαση στον χώρο ονομάτων της περιβάλλουσας "
"κλάσης. Αν ένα πεδίο σημειώσεων βρίσκεται αμέσως μέσα σε έναν χώρο κλάσης ή "
"μέσα σε ένα άλλο πεδίο σημειώσεων που βρίσκεται αμέσως μέσα σε έναν χώρο "
"κλάσης, ο κώδικας στο πεδίο σημειώσεων μπορεί να χρησιμοποιεί ονόματα που "
"έχουν οριστεί στον χώρο της κλάσης σαν να εκτελούνταν απευθείας στο σώμα της "
"κλάσης. Αυτό έρχεται σε αντίθεση με τις κανονικές συναρτήσεις που ορίζονται "
"μέσα σε κλάσεις, οι οποίες δεν μπορούν να έχουν πρόσβαση σε ονόματα που "
"έχουν οριστεί στο χώρο της κλάσης."

#: reference/executionmodel.rst:219
msgid ""
"Expressions in annotation scopes cannot contain :keyword:`yield`, ``yield "
"from``, :keyword:`await`, or :token:`:= <python-grammar:"
"assignment_expression>` expressions. (These expressions are allowed in other "
"scopes contained within the annotation scope.)"
msgstr ""
"Οι εκφράσεις σε πεδία σημειώσεων δεν μπορούν να περιέχουν τις εκφράσεις:"
"keyword:`yield`, ``yield from``, :keyword:`await` ή :token:`:=<python-"
"grammar:assignment_expression`. (Αυτές οι εκφράσεις επιτρέπονται σε άλλα "
"πεδία που περιέχονται μέσα στο πεδίο σημειώσεων.)"

#: reference/executionmodel.rst:223
msgid ""
"Names defined in annotation scopes cannot be rebound with :keyword:"
"`nonlocal` statements in inner scopes. This includes only type parameters, "
"as no other syntactic elements that can appear within annotation scopes can "
"introduce new names."
msgstr ""
"Τα ονόματα που ορίζονται σε πεδία σημειώσεων δεν μπορούν να δεσμευτούν εκ "
"νέου με δηλώσεις :keyword:`nonlocal` σε εσωτερικά πεδία. Αυτό περιλαμβάνει "
"μόνο παραμέτρους τύπου, καθώς και κανένα άλλο συντακτικό στοιχείο που μπορεί "
"να εμφανιστεί μέσα σε πεδία σημειώσεων δεν μπορεί να εισαγάγει νέα ονόματα."

#: reference/executionmodel.rst:226
msgid ""
"While annotation scopes have an internal name, that name is not reflected in "
"the :term:`__qualname__ <qualified name>` of objects defined within the "
"scope. Instead, the :attr:`!__qualname__` of such objects is as if the "
"object were defined in the enclosing scope."
msgstr ""
"Ενώ τα πεδία σημειώσεων έχουν ένα εσωτερικό όνομα, αυτό το όνομα δεν "
"αντικατοπτρίζεται στο :term:`__qualname__ <qualified name>` των αντικειμένων "
"που ορίζονται μέσα στο πεδίο.Αντίθετα, το :attr:`!__qualname__` αυτών των "
"αντικειμένων είναι σαν το αντικείμενο να είχε οριστεί στο περιβάλλον πεδίο."

#: reference/executionmodel.rst:231
msgid "Annotation scopes were introduced in Python 3.12 as part of :pep:`695`."
msgstr ""
"Τα πεδία σημειώσεων εισήχθησαν στην Python 3.12 ως μέρος του :pep:`695`."

#: reference/executionmodel.rst:237
msgid "Lazy evaluation"
msgstr "Καθυστερημένη εκτίμηση"

#: reference/executionmodel.rst:239
msgid ""
"The values of type aliases created through the :keyword:`type` statement are "
"*lazily evaluated*. The same applies to the bounds and constraints of type "
"variables created through the :ref:`type parameter syntax <type-params>`. "
"This means that they are not evaluated when the type alias or type variable "
"is created. Instead, they are only evaluated when doing so is necessary to "
"resolve an attribute access."
msgstr ""
"Οι τιμές των ψευδωνύμων τύπου που δημιουργούνται μέσω της δήλωσης :keyword:"
"`type`αξιολογούνται *καθυστερημένα*. Το ίδιο ισχύει και για τα όρια και τους "
"περιορισμούς τωνμεταβλητών τύπου που δημιουργούνται μέσω της :ref:`σύνταξης "
"παραμέτρων τύπου <type-params>`.Αυτό σημαίνει ότι δεν αξιολογούνται κατά τη "
"δημιουργία του ψευδωνύμου τύπου ή της μεταβλητής τύπου. Αντίθετα, "
"αξιολογούνται μόνο όταν αυτό είναι απαραίτητο για την επίλυση μιας πρόσβασης "
"χαρακτηριστικού."

#: reference/executionmodel.rst:246
msgid "Example:"
msgstr "Παράδειγμα:"

#: reference/executionmodel.rst:262
msgid ""
"Here the exception is raised only when the ``__value__`` attribute of the "
"type alias or the ``__bound__`` attribute of the type variable is accessed."
msgstr ""
"Εδώ η εξαίρεση εγείρεται μόνο όταν γίνει πρόσβαση στο χαρακτηριστικό "
"``__value__`` του ψευδωνύμου τύπου ή στο χαρακτηριστικό ``__bound__`` της "
"μεταβλητής τύπου."

#: reference/executionmodel.rst:266
msgid ""
"This behavior is primarily useful for references to types that have not yet "
"been defined when the type alias or type variable is created. For example, "
"lazy evaluation enables creation of mutually recursive type aliases::"
msgstr ""
"Αυτή η συμπεριφορά είναι κυρίως χρήσιμη για αναφορές σε τύπους που δεν έχουν "
"ακόμη οριστεί κατά τη δημιουργία του ψευδωνύμου τύπου ή της μεταβλητής "
"τύπου. Για παράδειγμα, η καθυστερημένη εκτίμηση επιτρέπει τη δημιουργία "
"αμοιβαία αναδρομικών ψευδωνύμων τύπων::"

#: reference/executionmodel.rst:276
msgid ""
"Lazily evaluated values are evaluated in :ref:`annotation scope <annotation-"
"scopes>`, which means that names that appear inside the lazily evaluated "
"value are looked up as if they were used in the immediately enclosing scope."
msgstr ""
"Οι τιμές που αξιολογούνται καθυστερημένα αξιολογούνται στο :ref:`πεδίο "
"σημειώσεων <annotation-scopes>`, που σημαίνει ότι τα ονόματα που "
"εμφανίζονται μέσα στην καθυστερημένα αξιολογούμενη τιμή αναζητούνται σαν να "
"χρησιμοποιήθηκαν στο αμέσως περιβάλλον πεδίο."

#: reference/executionmodel.rst:285
msgid "Builtins and restricted execution"
msgstr "Ενσωματωμένες συναρτήσεις και περιορισμένη εκτέλεση"

#: reference/executionmodel.rst:291
msgid ""
"Users should not touch ``__builtins__``; it is strictly an implementation "
"detail.  Users wanting to override values in the builtins namespace should :"
"keyword:`import` the :mod:`builtins` module and modify its attributes "
"appropriately."
msgstr ""
"Οι χρήστες δεν θα πρέπει να τροποποιούν το ``__builtins__``· είναι αυστηρά "
"μια λεπτομέρεια υλοποίησης. Οι χρήστες που θέλουν να παρακάμψουν τιμές στον "
"χώρο ονομάτων των ενσωματωμένων συναρτήσεων θα πρέπει να :keyword:`εισάγουν` "
"το module :mod:`builtins` και να τροποποιούν τα χαρακτηριστικά του κατάλληλα."

#: reference/executionmodel.rst:296
msgid ""
"The builtins namespace associated with the execution of a code block is "
"actually found by looking up the name ``__builtins__`` in its global "
"namespace; this should be a dictionary or a module (in the latter case the "
"module's dictionary is used).  By default, when in the :mod:`__main__` "
"module, ``__builtins__`` is the built-in module :mod:`builtins`; when in any "
"other module, ``__builtins__`` is an alias for the dictionary of the :mod:"
"`builtins` module itself."
msgstr ""
"Ο χώρος ονομάτων των ενσωματωμένων συναρτήσεων που σχετίζεται με την "
"εκτέλεση ενός μπλοκ κώδικα βρίσκεται στην πραγματικότητα μέσω αναζήτησης του "
"ονόματος ``__builtins__`` στον καθολικό του χώρο ονομάτων· αυτό θα πρέπει να "
"είναι ένα λεξικό ή ένα module (στη δεύτερη περίπτωση χρησιμοποιείται το "
"λεξικό του module). Από προεπιλογή, όταν βρισκόμαστε στο module :mod:"
"``__main__``, το ``__builtins__`` είναι το ενσωματωμένο module :mod:"
"`builtins`· όταν βρισκόμαστε σε οποιοδήποτε άλλο module, το ``__builtins__`` "
"είναι ένα ψευδώνυμο για το λεξικό του ίδιου του module :mod:`builtins`."

#: reference/executionmodel.rst:308
msgid "Interaction with dynamic features"
msgstr "Αλληλεπίδραση με δυναμικές λειτουργίες"

#: reference/executionmodel.rst:310
msgid ""
"Name resolution of free variables occurs at runtime, not at compile time. "
"This means that the following code will print 42::"
msgstr ""
"Η επίλυση ονομάτων των ελεύθερων μεταβλητών συμβαίνει κατά το χρόνο "
"εκτέλεσης, όχι κατά το χρόνο μεταγλώττισης. Αυτό σημαίνει ότι ο παρακάτω "
"κώδικας θα εκτυπώσει το 42::"

#: reference/executionmodel.rst:321
msgid ""
"The :func:`eval` and :func:`exec` functions do not have access to the full "
"environment for resolving names.  Names may be resolved in the local and "
"global namespaces of the caller.  Free variables are not resolved in the "
"nearest enclosing namespace, but in the global namespace.  [#]_ The :func:"
"`exec` and :func:`eval` functions have optional arguments to override the "
"global and local namespace.  If only one namespace is specified, it is used "
"for both."
msgstr ""
"Οι συναρτήσεις :func:`eval` και :func:`exec` δεν έχουν πρόσβαση στο πλήρες "
"περιβάλλον για την επίλυση ονομάτων. Τα ονόματα μπορεί να επιλύονται στους "
"τοπικούς και καθολικούς χώρους ονομάτων του καλούντος. Οι ελεύθερες "
"μεταβλητές δεν επιλύονται στο πλησιέστερο περιβάλλον πεδίου, αλλά στον "
"καθολικό χώρο ονομάτων. [#]_ Οι συναρτήσεις :func:`exec` και :func:`eval` "
"έχουν προαιρετικά ορίσματα για να παρακάμψουν τους καθολικούς και τοπικούς "
"χώρους ονομάτων. Αν καθοριστεί μόνο ένας χώρος ονομάτων, χρησιμοποιείται και "
"για τους δύο."

#: reference/executionmodel.rst:332
msgid "Exceptions"
msgstr "Εξαιρέσεις"

#: reference/executionmodel.rst:343
msgid ""
"Exceptions are a means of breaking out of the normal flow of control of a "
"code block in order to handle errors or other exceptional conditions.  An "
"exception is *raised* at the point where the error is detected; it may be "
"*handled* by the surrounding code block or by any code block that directly "
"or indirectly invoked the code block where the error occurred."
msgstr ""
"Οι εξαιρέσεις είναι ένας τρόπος διακοπής της κανονικής ροής ελέγχου ενός "
"μπλοκ κώδικα, προκειμένου να αντιμετωπιστούν σφάλματα ή άλλες εξαιρετικές "
"συνθήκες. Μια εξαίρεση  *εγείρεται* στο σημείο όπου εντοπίζεται το σφάλμα· "
"μπορεί να *αντιμετωπιστεί* από το περιβάλλον μπλοκ κώδικα ή από οποιοδήποτε "
"μπλοκ κώδικα που άμεσα ή έμμεσα εκτέλεσε το μπλοκ κώδικα όπου συνέβη το "
"σφάλμα."

#: reference/executionmodel.rst:349
msgid ""
"The Python interpreter raises an exception when it detects a run-time error "
"(such as division by zero).  A Python program can also explicitly raise an "
"exception with the :keyword:`raise` statement. Exception handlers are "
"specified with the :keyword:`try` ... :keyword:`except` statement.  The :"
"keyword:`finally` clause of such a statement can be used to specify cleanup "
"code which does not handle the exception, but is executed whether an "
"exception occurred or not in the preceding code."
msgstr ""
"Ο διερμηνέας της Python εγείρει μια εξαίρεση όταν εντοπίσει ένα σφάλμα κατά "
"την εκτέλεση(όπως η διαίρεση με το μηδέν). Ένα πρόγραμμα Python μπορεί "
"επίσης να εγείρει ρητά μια  εξαίρεση με τη δήλωση :keyword:`raise`. Οι "
"διαχειριστές εξαιρέσεων καθορίζονται με τη δήλωση :keyword:`try` ... :"
"keyword:`except`. Η ρήτρα :keyword:`finally` μιας τέτοιας δήλωσης μπορεί να "
"χρησιμοποιηθεί για να καθοριστεί κώδικας καθαρισμού, ο οποίος δεν "
"διαχειρίζεται την εξαίρεση αλλά εκτελείται ανεξάρτητα από το αν προηγήθηκε "
"εξαίρεση ή όχι στον προηγούμενο κώδικα."

#: reference/executionmodel.rst:359
msgid ""
"Python uses the \"termination\" model of error handling: an exception "
"handler can find out what happened and continue execution at an outer level, "
"but it cannot repair the cause of the error and retry the failing operation "
"(except by re-entering the offending piece of code from the top)."
msgstr ""
"Η Python χρησιμοποιεί το μοντέλο διαχείρισης σφαλμάτων «τερματισμού»: ένας "
"διαχειριστής εξαιρέσεων μπορεί να διαπιστώσει τι συνέβη και να συνεχίσει την "
"εκτέλεση σε ένα εξωτερικό επίπεδο, αλλά δεν μπορεί να διορθώσει την αιτία "
"του σφάλματος και να επαναλάβει τη λειτουργία που απέτυχε (εκτός αν "
"επανεισαχθεί το προβληματικό κομμάτι κώδικα από την αρχή)."

#: reference/executionmodel.rst:366
msgid ""
"When an exception is not handled at all, the interpreter terminates "
"execution of the program, or returns to its interactive main loop.  In "
"either case, it prints a stack traceback, except when the exception is :exc:"
"`SystemExit`."
msgstr ""
"Όταν μια εξαίρεση δεν αντιμετωπιστεί καθόλου, ο διερμηνέας τερματίζει την "
"εκτέλεση του προγράμματος ή επιστρέφει στον διαδραστικό κύριο βρόχο του. Και "
"στις δύο περιπτώσεις, εκτυπώνει το ίχνος της στοίβας, εκτός αν η εξαίρεση "
"είναι :exc:`SystemExit`."

#: reference/executionmodel.rst:370
msgid ""
"Exceptions are identified by class instances.  The :keyword:`except` clause "
"is selected depending on the class of the instance: it must reference the "
"class of the instance or a :term:`non-virtual base class <abstract base "
"class>` thereof. The instance can be received by the handler and can carry "
"additional information about the exceptional condition."
msgstr ""
"Οι εξαιρέσεις αναγνωρίζονται από στιγμιότυπα κλάσεων. Η ρήτρα :keyword:"
"`except` επιλέγεται ανάλογα με την κλάση του στιγμιότυπου: πρέπει να "
"αναφέρεται στην κλάση του στιγμιότυπου  ή σε μια :term:`μη εικονική βασική "
"κλάση <abstract base class>` αυτής. Το στιγμιότυπο μπορεί να παραληφθεί από "
"τον διαχειριστή και να μεταφέρει πρόσθετες πληροφορίες σχετικά με την "
"εξαιρετική συνθήκη."

#: reference/executionmodel.rst:378
msgid ""
"Exception messages are not part of the Python API.  Their contents may "
"change from one version of Python to the next without warning and should not "
"be relied on by code which will run under multiple versions of the "
"interpreter."
msgstr ""
"Τα μηνύματα εξαιρέσεων δεν αποτελούν μέρος του API της Python. Το "
"περιεχόμενό τους μπορεί να αλλάξει από τη μία έκδοση της Python στην επόμενη "
"χωρίς προειδοποίηση και δεν θα πρέπει να βασίζεται σε αυτά ο κώδικας που θα "
"εκτελεστεί σε πολλαπλές εκδόσεις του διερμηνέα."

#: reference/executionmodel.rst:382
msgid ""
"See also the description of the :keyword:`try` statement in section :ref:"
"`try` and :keyword:`raise` statement in section :ref:`raise`."
msgstr ""
"Δείτε επίσης την περιγραφή της δήλωσης :keyword:`try` στην ενότητα :ref:"
"`try` και της δήλωσης :keyword:`raise` στην ενότητα :ref:`raise`."

#: reference/executionmodel.rst:387
msgid "Footnotes"
msgstr "Υποσημειώσεις"

#: reference/executionmodel.rst:388
msgid ""
"This limitation occurs because the code that is executed by these operations "
"is not available at the time the module is compiled."
msgstr ""
"Αυτός ο περιορισμός προκύπτει επειδή ο κώδικας που εκτελείται από αυτές τις "
"λειτουργίες δεν είναι διαθέσιμος τη στιγμή που το module μεταγλωττίζεται."

#: reference/executionmodel.rst:8
msgid "execution model"
msgstr "μοντέλο εκτέλεσης"

#: reference/executionmodel.rst:8
msgid "code"
msgstr "κώδικας"

#: reference/executionmodel.rst:17
msgid "block"
msgstr "μπλοκ"

#: reference/executionmodel.rst:31 reference/executionmodel.rst:287
msgid "execution"
msgstr "εκτέλεση"

#: reference/executionmodel.rst:31
msgid "frame"
msgstr "πλαίσιο"

#: reference/executionmodel.rst:42
msgid "namespace"
msgstr "χώρος ονομάτων"

#: reference/executionmodel.rst:42 reference/executionmodel.rst:103
msgid "scope"
msgstr "πεδίο"

#: reference/executionmodel.rst:51
msgid "name"
msgstr "όνομα"

#: reference/executionmodel.rst:51
msgid "binding"
msgstr "δέσμευση"

#: reference/executionmodel.rst:57
msgid "from"
msgstr "από"

#: reference/executionmodel.rst:57
msgid "import statement"
msgstr "δήλωση εισαγωγής"

#: reference/executionmodel.rst:87
msgid "free"
msgstr "ελεύθερη"

#: reference/executionmodel.rst:87
msgid "variable"
msgstr "μεταβλητή"

#: reference/executionmodel.rst:111
msgid "environment"
msgstr "περιβάλλον"

#: reference/executionmodel.rst:117
msgid "NameError (built-in exception)"
msgstr "NameError (ενσωματωμένη εξαίρεση)"

#: reference/executionmodel.rst:117
msgid "UnboundLocalError"
msgstr "UnboundLocalError"

#: reference/executionmodel.rst:157
msgid "module"
msgstr "module"

#: reference/executionmodel.rst:157
msgid "__main__"
msgstr "__main__"

#: reference/executionmodel.rst:287
msgid "restricted"
msgstr "περιορισμένη"

#: reference/executionmodel.rst:334
msgid "exception"
msgstr "εξαίρεση"

#: reference/executionmodel.rst:336
msgid "raise an exception"
msgstr "εγείρει μια εξαίρεση"

#: reference/executionmodel.rst:336
msgid "handle an exception"
msgstr "διαχειρίζεται μια εξαίρεση"

#: reference/executionmodel.rst:336
msgid "exception handler"
msgstr "διαχειριστής εξαιρέσεων"

#: reference/executionmodel.rst:336
msgid "errors"
msgstr "σφάλματα"

#: reference/executionmodel.rst:336
msgid "error handling"
msgstr "διαχείριση σφαλμάτων"

#: reference/executionmodel.rst:357
msgid "termination model"
msgstr "μοντέλο τερματισμού"

#: reference/executionmodel.rst:364
msgid "SystemExit (built-in exception)"
msgstr "SystemExit (ενσωματωμένη εξαίρεση)"
