# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-03-14 12:51+0000\n"
"PO-Revision-Date: 2024-12-03 21:40+2\n"
"Last-Translator: Giannis Prokopos <giannisprokopos@gmail.com>\n"
"Language-Team: PyGreece <pygreece@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: reference/grammar.rst:4
msgid "Full Grammar specification"
msgstr "Πλήρης Προδιαγραφή Γραμματικής"

#: reference/grammar.rst:6
msgid ""
"This is the full Python grammar, derived directly from the grammar used to "
"generate the CPython parser (see :source:`Grammar/python.gram`). The version "
"here omits details related to code generation and error recovery."
msgstr ""
"Αυτή είναι η πλήρης γραμματική της Python, η οποία προκύπτει απευθείας από "
"τη γραμματική που χρησιμοποιείται για την δημιουργία του parser της CPython "
"(δείτε: :source:`Grammar/python.gram`). Η έκδοση που παρουσιάζεται εδώ, "
"παραλείπει λεπτομέρειες που σχετίζονται με τη δημιουργία κώδικα και την "
"ανάκτηση σφαλμάτων."

#: reference/grammar.rst:11
msgid ""
"The notation is a mixture of `EBNF <https://en.wikipedia.org/wiki/"
"Extended_Backus%E2%80%93Naur_form>`_ and `PEG <https://en.wikipedia.org/wiki/"
"Parsing_expression_grammar>`_. In particular, ``&`` followed by a symbol, "
"token or parenthesized group indicates a positive lookahead (i.e., is "
"required to match but not consumed), while ``!`` indicates a negative "
"lookahead (i.e., is required *not* to match).  We use the ``|`` separator to "
"mean PEG's \"ordered choice\" (written as ``/`` in traditional PEG "
"grammars). See :pep:`617` for more details on the grammar's syntax."
msgstr ""
"Η σημειογραφία είναι ένα μία μίξη από τα `EBNF <https://en.wikipedia.org/"
"wiki/Extended_Backus%E2%80%93Naur_form>`_ και `PEG <https://en.wikipedia.org/"
"wiki/Parsing_expression_grammar>`_. Συγκεκριμένα, όταν το ``&`` ακολουθείται "
"από ένα σύμβολο, ένα token ή ένα group σε παρένθεση υποδηλώνει θετική "
"προεπισκόπηση (δηλαδή, είναι απαραίτητο να ταιριάζει, αλλά δεν "
"καταναλώνεται), ενώ το ``!`` υποδηλώνει αρνητική προεπισκόπηση (δηλαδή, "
"είναι απαραίτητο να *μην* ταιριάζει). Χρησιμοποιούμε το διαχωριστικό ``|`` "
"για να δηλώσουμε την \"επιλογή σε σειρά\" του PEG (το οποίο στο παραδοσιακό "
"PEG είναι γραμμένο ως ``/``). Δείτε το :pep:`617` για περισσότερες "
"λεπτομέρειες σχετικά με τη σύνταξη της γραμματικής."
