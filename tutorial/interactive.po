# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-03-14 12:51+0000\n"
"PO-Revision-Date: 2024-05-29 23:40+0300\n"
"Last-Translator: Panagiotis Skias <panagiotis.skias@gmail.com>\n"
"Language-Team: PyGreece <pygreece@gmail.com>\n"
"Language: el\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.4.2\n"

#: tutorial/interactive.rst:5
msgid "Interactive Input Editing and History Substitution"
msgstr "Διαδραστική Επεξεργασία Input και Αντικατάσταση Ιστορικού"

#: tutorial/interactive.rst:7
msgid ""
"Some versions of the Python interpreter support editing of the current input "
"line and history substitution, similar to facilities found in the Korn shell "
"and the GNU Bash shell.  This is implemented using the `GNU Readline`_ "
"library, which supports various styles of editing.  This library has its own "
"documentation which we won't duplicate here."
msgstr ""
"Ορισμένες εκδόσεις του interpreter της Python υποστηρίζουν την επεξεργασία "
"του τρέχοντος input και την αντικατάσταση του ιστορικού, παρόμοια με τις "
"λειτουργίες που βρίσκονται στο κέλυφος Korn και στο κέλυφος GNU Bash.  Αυτό "
"υλοποιείται χρησιμοποιώντας τη βιβλιοθήκη `GNU Readline`_, η οποία "
"υποστηρίζει διάφορα στυλ επεξεργασίας.  Αυτή η βιβλιοθήκη έχει τη δική της "
"τεκμηρίωση που δεν θα αντιγράψουμε εδώ."

#: tutorial/interactive.rst:17
msgid "Tab Completion and History Editing"
msgstr "Συμπλήρωση Tab και Επεξεργασία Ιστορικού"

#: tutorial/interactive.rst:19
msgid ""
"Completion of variable and module names is :ref:`automatically enabled "
"<rlcompleter-config>` at interpreter startup so that the :kbd:`Tab` key "
"invokes the completion function; it looks at Python statement names, the "
"current local variables, and the available module names.  For dotted "
"expressions such as ``string.a``, it will evaluate the expression up to the "
"final ``'.'`` and then suggest completions from the attributes of the "
"resulting object.  Note that this may execute application-defined code if an "
"object with a :meth:`~object.__getattr__` method is part of the expression.  "
"The default configuration also saves your history into a file named :file:`."
"python_history` in your user directory. The history will be available again "
"during the next interactive interpreter session."
msgstr ""
"Η ολοκλήρωση των ονομάτων των μεταβλητών και των module είναι :ref:"
"`ενεργοποιείται αυτόματα <rlcompleter-config>` κατά την εκκίνηση του "
"interpreter, έτσι ώστε το κλειδί :kbd:`Tab` να καλεί τη συνάρτηση "
"ολοκλήρωσης' να κοιτάζει τα ονόματα δηλώσεων της Python, τις τρέχουσες local "
"μεταβλητές, και τα διαθέσιμα ονόματα του module.  Για dotted εκφράσεις, όπως "
"``string.a``, θα αξιολογήσει την έκφραση μέχρι το τελικό ``'.'`` και στη "
"συνέχει θα προτείνει συμπληρώσεις από τα χαρακτηριστικά του αντικειμένου που "
"προκύπτει.  Σημειώστε ότι αυτό μπορεί να εκτελέσει που ορίζεται από την "
"εφαρμογή εάν ένα αντικείμενο με μια μέθοδο :meth:`~object.__getattr__` είναι "
"μέρος της πρότασης.  Η προεπιλεγμένη διαμόρφωση αποθηκεύει επίσης το "
"ιστορικό σας σε ένα αρχείο με το όνομα :file:`.python_history` στον κατάλογο "
"του χρήστης σας.  Το ιστορικό θα είναι ξανά διαθέσιμο κατά την επόμενη "
"συνεδρίας διαδραστικού interpreter."

#: tutorial/interactive.rst:36
msgid "Alternatives to the Interactive Interpreter"
msgstr "Εναλλακτικές λύσεις για τον Διαδραστικό Interpreter"

#: tutorial/interactive.rst:38
msgid ""
"This facility is an enormous step forward compared to earlier versions of "
"the interpreter; however, some wishes are left: It would be nice if the "
"proper indentation were suggested on continuation lines (the parser knows if "
"an indent token is required next).  The completion mechanism might use the "
"interpreter's symbol table.  A command to check (or even suggest) matching "
"parentheses, quotes, etc., would also be useful."
msgstr ""
"Αυτή η λειτουργία είναι ένα τεράστιο βήμα προς τα εμπρός σε σύγκριση με τις "
"προηγούμενες εκδόσεις του interpreter' ωστόσο, απομένουν μερικές επιθυμίες: Θα "
"ήταν ωραίο να προταθεί η κατάλληλη εσοχή στις γραμμές συνέχειας (ο parser "
"γνωρίζει εάν απαιτείται στη συνέχεια ένα διακριτικό εσοχής).  Ο μηχανισμός "
"ολοκλήρωσης μπορεί να χρησιμοποιήσει τον πίνακα συμβόλων του interprete.  Θα "
"ήταν επίσης χρήσιμη μια εντολή για να ελέγξετε (ή ακόμα και να προτείνετε) "
"αντίστοιχες παρενθέσεις, εισαγωγικά κ.λπ."

#: tutorial/interactive.rst:45
msgid ""
"One alternative enhanced interactive interpreter that has been around for "
"quite some time is IPython_, which features tab completion, object "
"exploration and advanced history management.  It can also be thoroughly "
"customized and embedded into other applications.  Another similar enhanced "
"interactive environment is bpython_."
msgstr ""
"Ένα εναλλακτικό βελτιωμένος διαδραστικό interprete που υπάρχει εδώ και "
"αρκετό καιρό είναι το IPython_, το οποίο διαθέτει συμπλήρωση tab, εξερεύνηση "
"αντικειμένων και προηγμένη διαχείριση ιστορικού.  Μπορεί επίσης να "
"προσαρμοστεί πλήρως και να ενσωματωθεί σε άλλες εφαρμογές.  Ένα άλλο "
"παρόμοιο βελτιωμένο διαδραστικό περιβάλλον είναι το bpython_."
